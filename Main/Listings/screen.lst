C51 COMPILER V9.54   SCREEN                                                                03/06/2018 20:24:44 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SCREEN
OBJECT MODULE PLACED IN .\Objects\screen.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\screen.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\screen.lst) TABS(2) OBJECT(.\Objects\screen.obj)

line level    source

   1          #include "screen.h"
   2          
   3          #ifndef ADCUC841_H
   4          #define ADCUC841_H
   5          #include <ADUC841.H>
   6          #endif
   7          
   8          #include "config.h"
   9          #include "measurement.h"
  10          //#include <math.h>
  11          
  12          extern uint8 mode;
  13          
  14          
  15          extern volatile uint16 dc_avg;    // <<<  use these value when displaying
  16          extern volatile uint16 rms_avg;
  17          extern volatile uint16 p2p_value;
  18          extern volatile uint32 avg_freq;
  19          extern uint8 freq_method;
  20          extern uint16 pulses_in_interval;
  21          uint32 displayVariable=0;
  22          
  23          
  24          const uint8 displaytable[]={  // 0     1     2     3     4     5     6     7     8     9
  25                                      0x6F, 0x28, 0x5D, 0x7C, 0x3a, 0x76, 0x77, 0x2c, 0x7f, 0x3e};
  26          
  27          void init_screen(){
  28   1          uint8 i;
  29   1          SPICON=0x33; //initilisation bits for screen
  30   1          Slave_select = 0;
  31   1      
  32   1        //reset screen display to zeros
  33   1          sendByteToSPI(1);
  34   1        for(i=0;i<5;i++)
  35   1          {
  36   2            sendByteToSPI(0);
  37   2          }
  38   1          
  39   1      }     
  40          
  41          void update_display(){
  42   1      
  43   1      
  44   1        uint8 index;
  45   1        
  46   1        switch(mode){   //setup hardware based on new mode
  47   2          case 0:
  48   2      
  49   2            displayVariable = (((uint32)dc_avg)*VOLTAGE_RANGE)>>12;
  50   2      
  51   2          break;
  52   2          case 1:
  53   2            displayVariable =rms_avg;
  54   2            //displayVariable = my_sqrt(rms_avg);
C51 COMPILER V9.54   SCREEN                                                                03/06/2018 20:24:44 PAGE 2   

  55   2            //displayVariable = (((uint32)displayVariable)*VOLTAGE_RANGE)>>12;
  56   2          break;
  57   2          case 2:     break;
  58   2          case 3:  // frequency
  59   2          
  60   2        
  61   2      //    //Compute the frequency
  62   2      //    if(freq_method==0) //we are measuring a low frequency
  63   2      //    {
  64   2      //      displayVariable=CLOCK_SPEED/avg_freq; //Hz    
  65   2      //      //displayVariable = clock/avg_freq; //Hz
  66   2      //    }
  67   2      //    else //  freq_method = 1  , we are measuring a high frequency
  68   2            displayVariable = ((uint32)pulses_in_interval)*200;
  69   2            
  70   2          if (displayVariable>9999)
  71   2            displayVariable/=1000; //so freq is in kHz
  72   2      
  73   2          break;
  74   2        } 
  75   1          
  76   1          sendByteToSPI(1);
  77   1          for(index=0;index<4;index++) //startint with the least significant number
  78   1          { 
  79   2            sendByteToSPI(displaytable[displayVariable%10]);
  80   2            displayVariable=displayVariable/10;
  81   2          }
  82   1          sendByteToSPI(0);
  83   1      } 
  84          
  85          void sendByteToSPI(uint8 byte)
  86          {
*** WARNING C235 IN LINE 86 OF Source\screen.c: parameter 1: different types
  87   1        SPIDAT=byte;
  88   1        while(!ISPI);
  89   1        ISPI=0;
  90   1      }
  91          //}       //push values to display
  92          
  93          
  94          
  95          
  96           
  97          
  98          //sbit Slave_select = P3_6;  // initialize Slave Select bit to ENABL
  99          
 100          //SPICON=0x33;  //configure the SPICON
 101          
 102           
 103          
 104          //change the data to DEC, and use a table to find the HEX to display
 105          
 106          
 107          
 108          //transmit the data to SPIDAT in 4 bytes
 109          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.54   SCREEN                                                                03/06/2018 20:24:44 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
