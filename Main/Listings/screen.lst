C51 COMPILER V9.54   SCREEN                                                                03/06/2018 11:35:21 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SCREEN
OBJECT MODULE PLACED IN .\Objects\screen.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\screen.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\screen.lst) TABS(2) OBJECT(.\Objects\screen.obj)

line level    source

   1          #include "screen.h"
   2          
   3          #ifndef ADCUC841_H
   4          #define ADCUC841_H
   5          #include <ADUC841.H>
   6          #endif
   7          
   8          #include "config.h"
   9          #include "measurement.h"
  10          //#include <math.h>
  11          
  12          extern uint8 mode;
  13          
  14          
  15          extern volatile uint16 dc_avg;    // <<<  use these value when displaying
  16          extern volatile uint16 rms_avg;
  17          extern volatile uint16 p2p_value;
  18          extern volatile uint32 avg_freq;
  19          extern uint8 freq_method;
  20          extern uint16 pulses_in_interval;
  21          
  22          
  23          
  24          const uint8 displaytable[]={  // 0     1     2     3     4     5     6     7     8     9
  25                                      0x6F, 0x28, 0x5D, 0x7C, 0x3a, 0x76, 0x77, 0x2c, 0x7f, 0x3e};
  26          
  27          void init_screen(){
  28   1          uint8 i;
  29   1          SPICON=0x33; //initilisation bits for screen
  30   1          Slave_select = 0;
  31   1      
  32   1        //reset screen display to zeros
  33   1          sendByteToSPI(1);
  34   1        for(i=0;i<5;i++)
  35   1          {
  36   2            sendByteToSPI(0);
  37   2          }
  38   1          
  39   1      }     
  40          
  41          void update_display(){
  42   1        uint32 displayVariable;
  43   1        uint32 clock=119526;
  44   1        
  45   1        uint8 indexDisplay=0;
  46   1        uint8 input_data=0;
  47   1        uint8 index;
  48   1        
  49   1        switch(mode){   //setup hardware based on new mode
  50   2          case 0:
  51   2            displayVariable = analog_reading_to_voltage(dc_avg);
  52   2            
  53   2          
  54   2          break;
C51 COMPILER V9.54   SCREEN                                                                03/06/2018 11:35:21 PAGE 2   

  55   2          case 1:     break;
  56   2          case 2:     break;
  57   2          case 3:  // frequency
  58   2          
  59   2          //Compute the frequency
  60   2          if(freq_method==0) //we are measuring a low frequency
  61   2          {
  62   3            displayVariable=CLOCK_SPEED/avg_freq; //Hz    
  63   3            //displayVariable = clock/avg_freq; //Hz
  64   3          }
  65   2          else //  freq_method = 1  , we are measuring a high frequency
  66   2            displayVariable = pulses_in_interval / (0xFFFF) *CLOCK_SPEED; 
  67   2        
  68   2          //choosing the frequency measurement method
  69   2            if(displayVariable > 14000)
  70   2            {
  71   3            freq_method = 1;
  72   3            setup_Timer0();   // call the function to set up timer 0 to count the number of falling edges   
*** WARNING C206 IN LINE 72 OF Source\screen.c: 'setup_Timer0': missing function-prototype
  73   3            }
  74   2            else
  75   2            {
  76   3              freq_method = 0; 
  77   3              TR0 = 0; // stop  Timer 0
  78   3            }
  79   2          if (displayVariable>9999)
  80   2            displayVariable/=1000; //so freq is in kHz
  81   2      
  82   2          break;
  83   2        } 
  84   1          
  85   1          sendByteToSPI(1);
  86   1          for(index=0;index<4;index++) //startint with the least significant number
  87   1          { 
  88   2            sendByteToSPI(displaytable[displayVariable%10]);
  89   2            displayVariable=displayVariable/10;
  90   2          }
  91   1          sendByteToSPI(0);
  92   1      } 
  93          
  94          void sendByteToSPI(uint8 byte)
  95          {
*** WARNING C235 IN LINE 95 OF Source\screen.c: parameter 1: different types
  96   1        SPIDAT=byte;
  97   1        while(!ISPI);
  98   1        ISPI=0;
  99   1      }
 100          //}       //push values to display
 101          
 102          
 103          
 104          
 105           
 106          
 107          //sbit Slave_select = P3_6;  // initialize Slave Select bit to ENABL
 108          
 109          //SPICON=0x33;  //configure the SPICON
 110          
 111           
 112          
 113          //change the data to DEC, and use a table to find the HEX to display
 114          
C51 COMPILER V9.54   SCREEN                                                                03/06/2018 11:35:21 PAGE 3   

 115          
 116          
 117          //transmit the data to SPIDAT in 4 bytes
 118          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
