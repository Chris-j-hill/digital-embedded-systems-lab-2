C51 COMPILER V9.54   MAIN                                                                  02/27/2018 17:49:52 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include "config.h"
   3          #include "measurement.h"
   4          #include "screen.h"
   5          
   6          
   7          // global variables
   8          uint8 mode = 3;                 // mode of operation as read from pins
   9          uint32 avg_freq = 0;
  10          uint16 nb_overflow =0;          //to make a 32bits counter of clock cycles in the freq calculation
  11          
  12          
  13          
  14          // function prototypes
  15          void init_pins();
  16          void get_mode_from_pins();    //read mode from port
  17          void delay(uint16 period);    
  18          
  19          
  20          void main (void) {
  21   1        // setup
  22   1        init_pins();    //set switches and analog pins as input, leds as output and enable screen pins
  23   1        init_screen();
  24   1        
  25   1        //loop
  26   1        while(1){
  27   2          update_display();
  28   2          get_mode_from_pins();
  29   2          delay(SCREEN_UPDATE_DELAY_TIME);
  30   2        }
  31   1      }
  32          
  33          void init_pins(){
  34   1        //switch_pins
  35   1      
  36   1        SWITCH_PORT = SWITCH_PORT_MASK; //explicitely set these pins leaving rest of port alone
  37   1        
  38   1        ADCCON1 = 0x8c;   //init adc
  39   1        ADCCON2 = 0x22;
  40   1        ADCCON3 = 0x00;
  41   1        
  42   1        T2EX =0;
  43   1        
  44   1        //init output pins for screen
  45   1        switch(mode){   //setup hardware based on new mode
  46   2            case 0:   setup_timers_dc_averaging();      break;
  47   2            case 1:   setup_timers_rms_measurment();    break;
  48   2            case 2:         break;
  49   2            case 3:   setup_timers_freq_period_counting();      break;    
  50   2          }
  51   1      }
  52          
  53          
  54          void get_mode_from_pins(){    //read mode from port
C51 COMPILER V9.54   MAIN                                                                  02/27/2018 17:49:52 PAGE 2   

  55   1      // we don't care about the time effiency of that function since we delay it later
  56   1        // so it iplies switch case is fine and not comparison to previous state of mode variable
  57   1      
  58   1        mode = SWITCH_PORT & SWITCH_PORT_MASK;
  59   1        
  60   1      //    uint8 pin_state;
  61   1      //  pin_state = SWITCH_PORT & SWITCH_PORT_MASK;
  62   1      //  if (pin_state != mode){ 
  63   1      //    mode = pin_state;
  64   1          
  65   1          
  66   1        //}
  67   1      }   
  68          
  69          void delay(uint32 period){
  70   1        
  71   1      unsigned int i;   // counting variable
  72   1        period = period*CLOCK_CYCLES_IN_ONE_MS/CLOCK_CYCLES_IN_FOR_LOOP;
  73   1         
  74   1        for (i = 0; i < period; i++)    // count clock cycles
  75   1        // Nb: the for loop above takes 22 clock cycles to execute as assembly
  76   1          {}
  77   1      
  78   1      }   
  79          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     90    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
