C51 COMPILER V9.54   MAIN                                                                  02/20/2018 16:24:14 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <ADUC841.H>
   2          
   3          
   4          #include "measurement.h"
   5          #include "screen.h"
   6          
   7          #define SCREEN_UPDATE_DELAY_TIME 500  //delay for screen update in milliseconds
   8          #define SWITCH_PORT  P2     // switches are connected to Port 2
   9          #define SWITCH_PORT_MASK 0x3; //00000011
  10          #define SWITCH_PORT_MODE 0xFF // 00 = all output FF = all input
  11          
  12          //moved to measurement.h
  13          //#define ANALOG_INPUT_PORT P1
  14          
  15          
  16          
  17          #define CLOCK_SPEED  11059200
  18          #define CLOCK_CYCLES_IN_ONE_MS = CLOCK_SPEED/1000
  19          #define CLOCK_CYCLES_IN_FOR_LOOP 22 // value from counting assembled code
  20          #define USE_CIRCULAR_BUFFER   // comment out to use block buffering
  21          
  22          
  23          // global variables
  24          uint8 mode = 0;                 // mode of operation as read from pins
  25          
  26          //// function prototypes
  27          void init_pins();
  28          
  29          
  30          //void setup_timer2_freq_period_counting();
  31          //  
  32          //void update_display();        //push values to display
  33          void get_mode_from_pins();    //read mode from port
  34          void delay(uint16 period);    
  35          
  36          //void dc_voltage_measurment(); // functions to store measurements as required
  37          //void rms_measurment();        
  38          //void p2p_measurement();       
  39          //void frequency_measurement();
  40          
  41          
  42          void main (void) {
  43   1        // setup
  44   1        init_pins();    //set switches and analog pins as input, leds as output and enable screen pins
  45   1        init_screen();
  46   1        
  47   1        //loop
  48   1        while(1){
  49   2          update_display();
  50   2          get_mode_from_pins();
  51   2          delay(SCREEN_UPDATE_DELAY_TIME);
  52   2        }
  53   1      }
  54          
C51 COMPILER V9.54   MAIN                                                                  02/20/2018 16:24:14 PAGE 2   

  55          void init_pins(){
  56   1        //switch_pins
  57   1      
  58   1        SWITCH_PORT = SWITCH_PORT_MASK; //explicitely set these pins leaving rest of port alone
  59   1        
  60   1        ADCCON1 = 0x8c;   //init adc
  61   1        ADCCON2 = 0x22;
  62   1        ADCCON3 = 0x00;
  63   1        
  64   1        
  65   1        
  66   1        //init output pins for screen
  67   1      
  68   1      }
  69          
  70          
  71          void get_mode_from_pins(){    //read mode from port
  72   1      
  73   1        uint8 pin_state;
  74   1        //read pins...
  75   1        pin_state = SWITCH_PORT & SWITCH_PORT_MASK
  76   1        //if pin state != mode, setup hardware
  77   1        if (pin_state != mode){ 
  78   2          mode = pin_state;
  79   2          
  80   2          switch(mode){   //setup hardware based on new mode
  81   3            case 0:   setup_timers_dc_averaging();      break;
  82   3            case 1:         break;
  83   3            case 2:         break;
  84   3            case 3:   setup_timers_freq_period_counting();      break;
  85   3            
  86   3          }
  87   2        }
  88   1      }   
  89          
  90          void delay(uint32 period){
  91   1        
  92   1      unsigned int i;   // counting variable
  93   1        period = period*CLOCK_CYCLES_IN_ONE_MS/CLOCK_CYCLES_IN_FOR_LOOP;
  94   1         
  95   1        for (i = 0; i < period; i++)    // count clock cycles
  96   1        // Nb: the for loop above takes 22 clock cycles to execute as assembly
  97   1          {}
  98   1      
  99   1      }   
 100          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     87    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
