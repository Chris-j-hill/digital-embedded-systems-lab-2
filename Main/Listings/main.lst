C51 COMPILER V9.54   MAIN                                                                  02/26/2018 22:45:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <ADUC841.H>
   2          
   3          #include "config.h"
   4          #include "measurement.h"
   5          #include "screen.h"
   6          
   7          
   8          // global variables
   9          uint8 mode = 0;                 // mode of operation as read from pins
  10          uint32 avg_freq = 0;
  11          uint16 nb_overflow =0;          //to make a 32bits counter of clock cycles in the freq calculation
  12          
  13          
  14          
  15          // function prototypes
  16          void init_pins();
  17          void get_mode_from_pins();    //read mode from port
  18          void delay(uint16 period);    
  19          
  20          
  21          void main (void) {
  22   1        // setup
  23   1        init_pins();    //set switches and analog pins as input, leds as output and enable screen pins
  24   1        init_screen();
  25   1        
  26   1        //loop
  27   1        while(1){
  28   2          update_display();
  29   2          get_mode_from_pins();
  30   2          delay(SCREEN_UPDATE_DELAY_TIME);
  31   2        }
  32   1      }
  33          
  34          void init_pins(){
  35   1        //switch_pins
  36   1      
  37   1        SWITCH_PORT = SWITCH_PORT_MASK; //explicitely set these pins leaving rest of port alone
  38   1        
  39   1        ADCCON1 = 0x8c;   //init adc
  40   1        ADCCON2 = 0x22;
  41   1        ADCCON3 = 0x00;
  42   1        
  43   1        
  44   1        
  45   1        //init output pins for screen
  46   1      
  47   1      }
  48          
  49          
  50          void get_mode_from_pins(){    //read mode from port
  51   1      // we don't care about the time effiency of that function since we delay it later
  52   1        // so it iplies switch case is fine and not comparison to previous state of mode variable
  53   1      
  54   1        mode = SWITCH_PORT & SWITCH_PORT_MASK;
C51 COMPILER V9.54   MAIN                                                                  02/26/2018 22:45:34 PAGE 2   

  55   1        
  56   1      //    uint8 pin_state;
  57   1      //  pin_state = SWITCH_PORT & SWITCH_PORT_MASK;
  58   1      //  if (pin_state != mode){ 
  59   1      //    mode = pin_state;
  60   1          
  61   1          switch(mode){   //setup hardware based on new mode
  62   2            case 0:   setup_timers_dc_averaging();      break;
  63   2            case 1:   setup_timers_rms_measurment();    break;
  64   2            case 2:         break;
  65   2            case 3:   setup_timers_freq_period_counting();      break;    
  66   2          }
  67   1        //}
  68   1      }   
  69          
  70          void delay(uint32 period){
  71   1        
  72   1      unsigned int i;   // counting variable
  73   1        period = period*CLOCK_CYCLES_IN_ONE_MS/CLOCK_CYCLES_IN_FOR_LOOP;
  74   1         
  75   1        for (i = 0; i < period; i++)    // count clock cycles
  76   1        // Nb: the for loop above takes 22 clock cycles to execute as assembly
  77   1          {}
  78   1      
  79   1      }   
  80          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     86    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
